1. Write title of the project .
Ans. Hospital Appointment System.
2. Group details ( Roll no,name etc)
Ans. UCE2021550 - Ankita Patil
UCE2021553 - Niharika Patil
UCE2021554 - Pradnya Patil
UCE201555 - Sanika Patil
3. Explain in brief about the project .
Our project provides the basic functionalities needed to handle hospital appointment system.It is
a menu-driven program.It enables doctors and admins to view and handle appointment
schedules if required.
1) If the patient is new to hospital, he/she has to fill up the details such as name, age, blood
group, gender, appointment name, phone number and address of himself/herself. Then the
patient is asked if it is an emergency case or not. After that, the patient is asked to select one of
the health issues and then the priority is set to the patient. According to the health issue, a
specific doctor is assigned to the patient.
2) If an existing patient revisits the hospital then, he/she has to input the name and then select
the health issue and the date has to be input again and the database will be updated
accordingly. Thus the doctor is assigned.
3) There is also an option to search the patient by name and display their details.
4) Another option given to explore is ‘display patient details’ which displays a list of patients with
their respective information with the doctor’s information to whom the patient is assigned to.
5) If the delete option is selected then the patient has been discharged from the hospital.
6) Then the last option is to exit out of the program.
4. List all data structures used .justify why did you select these data
structures ?.
1) Priority queue:
We have implemented priority queue data structure in our project. It is known that Queue follows
the First-In-First-Out algorithm, but sometimes the elements of the queue need to be processed
according to the priority, that’s when the PriorityQueue comes into play.
Need of priority queue- We discussed among our group and came up to the conclusion that the
hospital emergency queue is an ideal real-life example of a priority queue. In this queue of
patients, the patient with the most critical situation is the first in a queue, and the patient who
doesn't need immediate medical attention will be the last. A regular queue won't help us with
this because it is first in, first out (FIFO) and has no regard for the priority of its elements.
Therefore, we have implemented priority queues in our project.
2) Linked List:
A linked list consists of nodes where each node contains a data field and a reference(link) to the
next node in the list.We have implemented the priority queue with the help of a linked list, here
comes our second data structure.

Need of linked list-We have used linked lists in queues over arrays because from a memory
allocation point of view linked lists are more efficient than arrays as unlike arrays the size of
linked list is not pre-defined,allowing the linked list to increase or decrease in size as per
program runs.
